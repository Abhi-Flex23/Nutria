import{a as h}from"./chunk.VWFXFAE6.js";import{a as d}from"./chunk.DBCWAMJH.js";import{a}from"./chunk.JUX3LFDW.js";import{a as l,b as o,f as n}from"./chunk.X7Q42RGY.js";import{c as i}from"./chunk.3G4FHXSN.js";import{g as r}from"./chunk.OAQCUA7X.js";var e=class extends n{constructor(){super(...arguments);this.observedElements=[];this.disabled=!1}connectedCallback(){super.connectedCallback(),this.resizeObserver=new ResizeObserver(t=>{a(this,"sl-resize",{detail:{entries:t}})}),this.disabled||this.startObserver()}disconnectedCallback(){super.disconnectedCallback(),this.stopObserver()}handleSlotChange(){this.disabled||this.startObserver()}startObserver(){let t=this.shadowRoot.querySelector("slot");if(t!==null){let b=t.assignedElements({flatten:!0});this.observedElements.forEach(s=>this.resizeObserver.unobserve(s)),this.observedElements=[],b.forEach(s=>{this.resizeObserver.observe(s),this.observedElements.push(s)})}}stopObserver(){this.resizeObserver.disconnect()}handleDisabledChange(){this.disabled?this.stopObserver():this.startObserver()}render(){return i` <slot @slotchange=${this.handleSlotChange}></slot> `}};e.styles=h,r([o({type:Boolean,reflect:!0})],e.prototype,"disabled",2),r([d("disabled",{waitUntilFirstUpdate:!0})],e.prototype,"handleDisabledChange",1),e=r([l("sl-resize-observer")],e);export{e as a};
