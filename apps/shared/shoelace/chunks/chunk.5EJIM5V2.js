import{a as h}from"./chunk.LTYLEQUG.js";import{a as d}from"./chunk.OSEV3RCT.js";import{a as n}from"./chunk.V4OMSSO6.js";import{a,b as o}from"./chunk.GVR6SJVE.js";import{c as i,h as l}from"./chunk.7EIHAL55.js";import{g as r}from"./chunk.OAQCUA7X.js";var e=class extends l{constructor(){super(...arguments);this.observedElements=[];this.disabled=!1}connectedCallback(){super.connectedCallback(),this.resizeObserver=new ResizeObserver(s=>{n(this,"sl-resize",{detail:{entries:s}})}),this.disabled||this.startObserver()}disconnectedCallback(){super.disconnectedCallback(),this.stopObserver()}handleSlotChange(){this.disabled||this.startObserver()}startObserver(){let s=this.shadowRoot.querySelector("slot");if(s!==null){let b=s.assignedElements({flatten:!0});this.observedElements.forEach(t=>this.resizeObserver.unobserve(t)),this.observedElements=[],b.forEach(t=>{this.resizeObserver.observe(t),this.observedElements.push(t)})}}stopObserver(){this.resizeObserver.disconnect()}handleDisabledChange(){this.disabled?this.stopObserver():this.startObserver()}render(){return i` <slot @slotchange=${this.handleSlotChange}></slot> `}};e.styles=h,r([o({type:Boolean,reflect:!0})],e.prototype,"disabled",2),r([d("disabled",{waitUntilFirstUpdate:!0})],e.prototype,"handleDisabledChange",1),e=r([a("sl-resize-observer")],e);export{e as a};
