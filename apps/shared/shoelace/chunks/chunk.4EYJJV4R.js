import{a as E}from"./chunk.AVVOP2JA.js";import{a as h}from"./chunk.6PWP57XS.js";import{a as y}from"./chunk.FC4RDJJF.js";import{b as S}from"./chunk.7DJRGBBM.js";import{a as T}from"./chunk.AR2QSYXF.js";import{a as p,b as I,e as m,g as b}from"./chunk.IKUI3UUK.js";import{c as g}from"./chunk.SYBSOZNG.js";import{e as c}from"./chunk.I4CX4JT3.js";function x(u,f=!1){function e(l){let i=l.getChildrenItems({includeDisabled:!1});if(i.length){let n=i.every(r=>r.selected),a=i.every(r=>!r.selected&&!r.indeterminate);l.selected=n,l.indeterminate=!n&&!a}}function t(l){let i=l.parentElement;h.isTreeItem(i)&&(e(i),t(i))}function s(l){for(let i of l.getChildrenItems())i.selected=f?l.selected||i.selected:!i.disabled&&l.selected,s(i);f&&e(l)}s(u),t(u)}var o=class extends b{constructor(){super(...arguments);this.selection="single";this.localize=new S(this);this.clickTarget=null;this.initTreeItem=e=>{e.selectable=this.selection==="multiple",["expand","collapse"].filter(t=>!!this.querySelector(`[slot="${t}-icon"]`)).forEach(t=>{let s=e.querySelector(`[slot="${t}-icon"]`);s===null?e.append(this.getExpandButtonIcon(t)):s.hasAttribute("data-default")&&s.replaceWith(this.getExpandButtonIcon(t))})}}async connectedCallback(){super.connectedCallback(),this.handleTreeChanged=this.handleTreeChanged.bind(this),this.handleFocusIn=this.handleFocusIn.bind(this),this.handleFocusOut=this.handleFocusOut.bind(this),this.setAttribute("role","tree"),this.setAttribute("tabindex","0"),this.addEventListener("focusin",this.handleFocusIn),this.addEventListener("focusout",this.handleFocusOut),this.addEventListener("sl-lazy-change",this.handleSlotChange),await this.updateComplete,this.mutationObserver=new MutationObserver(this.handleTreeChanged),this.mutationObserver.observe(this,{childList:!0,subtree:!0})}disconnectedCallback(){super.disconnectedCallback(),this.mutationObserver.disconnect(),this.removeEventListener("focusin",this.handleFocusIn),this.removeEventListener("focusout",this.handleFocusOut),this.removeEventListener("sl-lazy-change",this.handleSlotChange)}getExpandButtonIcon(e){let s=(e==="expand"?this.expandedIconSlot:this.collapsedIconSlot).assignedElements({flatten:!0})[0];if(s){let l=s.cloneNode(!0);return[l,...l.querySelectorAll("[id]")].forEach(i=>i.removeAttribute("id")),l.setAttribute("data-default",""),l.slot=`${e}-icon`,l}return null}handleTreeChanged(e){for(let t of e){let s=[...t.addedNodes].filter(h.isTreeItem),l=[...t.removedNodes].filter(h.isTreeItem);s.forEach(this.initTreeItem),l.includes(this.lastFocusedItem)&&this.focusItem(this.getFocusableItems()[0])}}syncTreeItems(e){let t=this.getAllTreeItems();if(this.selection==="multiple")x(e);else for(let s of t)s!==e&&(s.selected=!1)}selectItem(e){let t=[...this.selectedItems];this.selection==="multiple"?(e.selected=!e.selected,e.lazy&&(e.expanded=!0),this.syncTreeItems(e)):this.selection==="single"||e.isLeaf?(e.expanded=!e.expanded,e.selected=!0,this.syncTreeItems(e)):this.selection==="leaf"&&(e.expanded=!e.expanded);let s=this.selectedItems;(t.length!==s.length||s.some(l=>!t.includes(l)))&&Promise.all(s.map(l=>l.updateComplete)).then(()=>{this.emit("sl-selection-change",{detail:{selection:s}})})}getAllTreeItems(){return[...this.querySelectorAll("sl-tree-item")]}focusItem(e){e==null||e.focus()}handleKeyDown(e){if(!["ArrowDown","ArrowUp","ArrowRight","ArrowLeft","Home","End","Enter"," "].includes(e.key))return;let t=this.getFocusableItems(),s=this.localize.dir()==="ltr",l=this.localize.dir()==="rtl";if(t.length>0){e.preventDefault();let i=t.findIndex(d=>d.matches(":focus")),n=t[i],a=d=>{let v=t[y(d,0,t.length-1)];this.focusItem(v)},r=d=>{n.expanded=d};e.key==="ArrowDown"?a(i+1):e.key==="ArrowUp"?a(i-1):s&&e.key==="ArrowRight"||l&&e.key==="ArrowLeft"?!n||n.disabled||n.expanded||n.isLeaf&&!n.lazy?a(i+1):r(!0):s&&e.key==="ArrowLeft"||l&&e.key==="ArrowRight"?!n||n.disabled||n.isLeaf||!n.expanded?a(i-1):r(!1):e.key==="Home"?a(0):e.key==="End"?a(t.length-1):(e.key==="Enter"||e.key===" ")&&(n.disabled||this.selectItem(n))}}handleClick(e){let t=e.target,s=t.closest("sl-tree-item"),l=e.composedPath().some(i=>{var n;return(n=i==null?void 0:i.classList)==null?void 0:n.contains("tree-item__expand-button")});!s||s.disabled||t!==this.clickTarget||(this.selection==="multiple"&&l?s.expanded=!s.expanded:this.selectItem(s))}handleMouseDown(e){this.clickTarget=e.target}handleFocusOut(e){let t=e.relatedTarget;(!t||!this.contains(t))&&(this.tabIndex=0)}handleFocusIn(e){let t=e.target;e.target===this&&this.focusItem(this.lastFocusedItem||this.getAllTreeItems()[0]),h.isTreeItem(t)&&!t.disabled&&(this.lastFocusedItem&&(this.lastFocusedItem.tabIndex=-1),this.lastFocusedItem=t,this.tabIndex=-1,t.tabIndex=0)}handleSlotChange(){this.getAllTreeItems().forEach(this.initTreeItem)}async handleSelectionChange(){let e=this.selection==="multiple",t=this.getAllTreeItems();this.setAttribute("aria-multiselectable",e?"true":"false");for(let s of t)s.selectable=e;e&&(await this.updateComplete,[...this.querySelectorAll(":scope > sl-tree-item")].forEach(s=>x(s,!0)))}get selectedItems(){let e=this.getAllTreeItems(),t=s=>s.selected;return e.filter(t)}getFocusableItems(){let e=this.getAllTreeItems(),t=new Set;return e.filter(s=>{var i;if(s.disabled)return!1;let l=(i=s.parentElement)==null?void 0:i.closest("[role=treeitem]");return l&&(!l.expanded||l.loading||t.has(l))&&t.add(s),!t.has(s)})}render(){return g`
      <div
        part="base"
        class="tree"
        @click=${this.handleClick}
        @keydown=${this.handleKeyDown}
        @mousedown=${this.handleMouseDown}
      >
        <slot @slotchange=${this.handleSlotChange}></slot>
        <slot name="expand-icon" hidden aria-hidden="true"> </slot>
        <slot name="collapse-icon" hidden aria-hidden="true"> </slot>
      </div>
    `}};o.styles=E,c([m("slot:not([name])")],o.prototype,"defaultSlot",2),c([m("slot[name=expand-icon]")],o.prototype,"expandedIconSlot",2),c([m("slot[name=collapse-icon]")],o.prototype,"collapsedIconSlot",2),c([I()],o.prototype,"selection",2),c([T("selection")],o.prototype,"handleSelectionChange",1),o=c([p("sl-tree")],o);export{o as a};
